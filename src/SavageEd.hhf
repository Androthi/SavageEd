	#includeonce("w.hhf")
	#includeonce("macros\macros.hhf")
	#includeonce("hide\hidelib.hhf")
	#includeonce("stdlib.hhf")
	#includeonce("hide\dbgwin.hhf")
	#includeonce("w32\shell32.hhf" )

readonly
	
	version			:string := "SavageEd v0.9.14";

type
	// Message and dispatch table related definitions:
		  
	MsgProc_t:	procedure( hwin:dword; wParam:dword; lParam:dword );
	
	MsgProcPtr_t:
		record
			MessageValue	:dword;
			MessageHndlr	:MsgProc_t;			
		endrecord;
		
	range:
		record
			start_index	:uns32;
			end_index	:uns32;
		endrecord;

	wnd_settings:
		record
			hinst		:dword;
			hwnd		:dword;
			hmenu		:dword;
			hstatus		:dword;
			hsubmenu	:dword;
			hcontextmenu:dword;
			hfind		:dword;
			habout		:dword;
			hredDLL		:dword;
			msg			:w.MSG;
			xPos		:uns32;
			yPos		:uns32;
			width		:uns32;
			height		:uns32;

			// text and background colors
			textColor	:w.COLORREF;
			backColor	:w.COLORREF;
			
			// active URLs
			active_url	:boolean;
		endrecord;

	FindMode:
		record
			down		:boolean;
			wholeword	:boolean;
			matchcase	:boolean;
			matchpattern:boolean;
		endrecord;
			
	LineInfo:
		record
			number	:uns32;
			index	:uns32;
			length	:uns32;
		endrecord;
	
	LineBreak: enum {
		CRLF,
		LF
	};
	
	EditInfo:
		record
			filepath:string;
			old_proc:dword; // original window proc of edit control
			hred	:dword;
			hfont	:dword;
			tabs	:uns32; // tabs in edit control size
			find_mode	:FindMode;
						
			// selection
			cursor				:range;
			column_index		:uns32;
			
			// line info of cursor, has number, index and length
			line				:LineInfo;
			lines				:uns32;
			line_break			:LineBreak;
			mode				:byte;
			mark_point			:uns32;
			mark				:boolean;
			word_wrap			:boolean;

		endrecord;
	
	edit_mode	:enum {
		MODE_INSERT,
		MODE_EDITINI,
		MODE_VIEWDOCS

	};

	menu_items :enum {
		IDM_NEW,
		IDM_OPEN,
		IDM_INST,
		IDM_SAVE,
		IDM_SAVEAS,
		IDM_SAVE_SELECTION_AS,
		IDM_RECENT,  
		IDM_PAGESETUP,
		IDM_QUIT,
		IDM_UNDO,
		IDM_REDO,
		IDM_CUT, 
		IDM_COPY,
		IDM_PASTE,    
		IDM_SELECTALL, 
		IDM_FIND,
		IDM_FINDNEXT, 
		IDM_FINDPREV,
		IDM_REPLACE,
		IDM_EDIT_GOTO,
		IDM_TIME,
		IDM_FONT,
		IDM_BACKGROUND,
		IDM_FORGROUND, 
		IDM_AUTO,
		IDM_WRAP,
		IDM_PEG,       
		IDM_READONLY,
		IDM_SETTAB,
		IDM_TAB_AS_SPACE,
		IDM_AUTOINDENT,
		IDM_RECENTNEW,
		IDM_CLEAREXIT,
		IDM_OPENRECENT,
		IDM_REMEMBERPOS,
		IDM_VIEW_STATUS,
		IDM_ABOUT,
		IDM_DOCUMENTS,
		IDM_EDITINI
	};

	rect_t:
	record
		union
			left	:uns32;
			x		:uns32;
		endunion;
		union
			top		:uns32;
			y		:uns32;
		endunion;
		union
			right	:uns32;
			width	:uns32;
		endunion;
		union
			bottom	:uns32;
			height	:uns32;
		endunion;
	endrecord;

const
	ID_JAKAL				:= 1000;
	ID_FINDDLG              := 2000;
	IDC_FINDTEXT            := 2001;
	IDC_REPLACETEXT         := 2002;
	IDC_BTN_REPLACE         := 2007;
	IDC_BTN_REPLACEALL      := 2008;
	IDC_CHK_MATCHCASE       := 2003;
	IDC_CHK_WHOLEWORD       := 2004;
	IDC_RBN_UP              := 2006;
	IDC_RBN_DOWN            := 2005;
	IDC_CHK_PATTERN         := 2009;
	ID_ABOUT                := 6000;
	ID_ABOUTGRP             := 1001;
	ID_INPUT                := 3000;
	IDC_EDT_INPUT           := 3001;
	ID_SAVAGEED_MANUAL		:= 4000;

	RECENT_MENU_START	:= 9000;
	RECENT_MENU_END		:= 9019;	// It's over 9000!
	IDC_SBAR			:= 9020;

	STATUS_BAR_HEIGHT	:= 20;
	STATUS_PARTS		:= 5;
	POS_LINES			:=300;
	POS_READONLY		:=POS_LINES+18;
	POS_LINEBREAK		:=POS_READONLY+18;
	POS_MARK			:=POS_LINEBREAK+32;
	POS_MODE			:=POS_MARK + 1800;
	
	DEFAULT_TAB_STOP	:= 4;

	// default colors
	color_white :w.COLORREF := $00FF_FFFF;
	color_black :w.COLORREF := $0000_0000;
	
	szLINEBUFFER	:= 3000;	
	
readonly

	// this is the main configuration file name
	config_file		:string := "SavageEd.ini";
	
	s_window 	:string := "Window";
	ClassName	:string:= "SavageEDClass";
	AppName		:string:= "SavageEd";
	
	RichEditDLL		:string := "riched20.dll";
	
	// strings and error messages
	s_recent	:string := "Recent Files";
	s_settings	:string := "Settings";
	s_tabs		:string := "Tabs";
	s_tabsasspace:string	:= "Tabs as Spaces";
	s_font		:string := "Font";
	s_find		:string := "Find";
	s_text		:string := "Text";
	s_background_color	:string := "Background Color";
	s_text_color		:string := "Text Color";
	s_custcolors:string := "Custom Colors";
	s_openrecent:string := "Open Recent";
	s_rememberpos :string := "Remember Position";
	s_wrap		:string := "Word Wrap";
	s_autosave	:string := "Auto Save";
	s_autoindent:string := "Auto Indent";
	s_topwindow	:string := "Top Window";
	s_status	:string := "show status";
	s_clearexit	:string := "Clear On Exit";
	s_recentnew	:string := "New Recent Window";
	s_readonly	:string := "Read Only";
	s_resedClass:string := "RichEdit20A";
	s_untitled	:string := "Untitled";
	s_txtext	:string := ".txt";
	s_fontname	:string := "Courier New";
	s_nl		:string := nl;
	s_r			:string := "R";
	s_b			:string := " ";
	s_mark		:string := "M";
	s_empty		:string := "";
	s_lf		:string := "LF";
	s_crlf		:string := "CRLF";
	s_inputlinen:string := "Enter Line Number";
	s_inputtab	:string := "Enter tab spacing in number of characters";
	
	s_document		:string := "SavageEd.md";	
	s_missingDLL	:string := "Could not open Riched20.dll";
	s_missingDocs	:string := "Missing Documents: SavageEd.md";
	s_nosave		:string := "Could Not Save File";
	s_noopen		:string := "Unable to open file";
	s_notemp		:string := "Unable to create temporary file";
	s_savechanges	:string := "Save changes to ";
	s_savetitle		:string := "Save As: Extension Is Not Assumed";
	
	curdir			:byte := '.';	// '.' = curdir


const
	
	typeConsts( edit, EditInfo, edi, esi)
	typeConsts( charrange, range, esi )
	typeConsts( config, tConfig, esi )

storage
	window		:wnd_settings; @external;
	
	// temp, move into window record
	config		:tConfig; @external;
	findbuf		:byte[300]; @external;
	replacebuf	:byte[300]; @external;
	logfont		:w.LOGFONT; @external;
	buffer		:byte[szLINEBUFFER]; @external;
	find_range	:w.TEXTRANGE; @external;
	return		:string; @external;
	text_range	:w.TEXTRANGE; @external;

	
static
	// temp, move into list, and attach list to window record
	info		:EditInfo; @external;
	strtabs		:string; @external;	
	statusParts	:int32[STATUS_PARTS]; @external;
	default_date_format :string; @external;
	default_time_format :string; @external;	

proc
	// external declarations
	
	updateStatus :procedure; @external;
	WndProc :procedure( lparam:dword; wparam:dword; umsg:uns32; hwin:dword ); @external;
	Msg_Command :procedure( hwin:dword; wparam:dword; lparam:dword ); @external;
	loadFile :procedure( filename:string ); @external;
	updateRecentLog :procedure; @external;
	getInfo :procedure ( var inf:EditInfo); @external;
	getConfigPath :procedure( s:string ); @external;
	command_copy_word :procedure; @external;
	command_delete_word :procedure; @external;
	command_cut_line :procedure; @external;
	command_cursor_up :procedure; @external;
	command_cursor_left :procedure; @external;	
	command_cursor_down :procedure; @external;	
	command_cursor_right :procedure; @external;	
	command_move_to_bol :procedure; @external;
	command_move_to_eol :procedure; @external;
	command_reduce_indent :procedure; @external;
	command_increase_indent :procedure; @external;	
	command_toggle_mark :procedure; @external;	
	Msg_OpenDroppedFile :procedure( hwnd:dword; wParam:dword; lParam:dword ); @external;
	Msg_SetFocus :procedure( hwin:dword; wparam:dword; lparam:dword ); @external;
	Msg_Context :procedure( hwnd:dword; wParam:dword; lParam:dword ); @external;		
	Msg_Size :procedure( hwin:dword; wparam:dword; lparam:dword ); @external;
	Msg_Create :procedure( hwin:dword; wParam:dword; lparam:dword ); @external;
	Msg_Close :procedure( hwin:dword; wparam:dword; lparam:dword ); @external;
	Msg_Destroy :procedure( hwin:dword; wparam:dword; lparam:dword ); @external;
	Error :procedure( error_msg:string; warning:boolean ); @external;
	initConfig	:procedure; @external;
	initWindow	:procedure; @external;
	updateMenu	:procedure; @external;
 	getConfirm	:procedure {@returns("EAX")}; @external;
	StreamInProc :procedure( var pBytesRead:dword ; NumBytes:dword ; var pbuffer:dword ; _hFile:dword ); @external;
	StreamOutProc :procedure( var pBytesWritten:dword ; NumBytes:dword ; var pbuffer:dword ; _hFile:dword ); @external;
	setWindowTitle :procedure; @external;
	getTempName :procedure( prefix:string; ext:string; dest:string ); @external;
	checkSave :procedure; @external;
	SaveSelectionAs :procedure; @external;
	SaveAs :procedure; @external;
	saveFile :procedure( filename:string; save_selection:boolean ); @external;
	getFileName	:procedure; @external;
	setText :procedure( hfile:dword ); @external;
	Cmd_File_Quit :procedure( hwin:dword; wparam:dword; lparam:dword ); @external;
	checkLog :procedure; @external;
	command_insert_time :procedure; @external;
	GetSelText :procedure( lpBuff:dword ); @external;
	AboutDlgProc :procedure( lParam:dword; wParam:dword; uMsg:uns32; hDlg:dword); @external;
	AddMenus :procedure; @external;
	setFormat :procedure( var inf :EditInfo ); @external;
	Proc_Edit	:procedure( lParam:dword; wParam:dword; uMsg:uns32; hWin:dword ); @external;
	newInstance :procedure( filename:string ); @external;
	openRecent :procedure(id:dword); @external;
	Proc_Input :procedure( lParam:dword; wParam:dword; uMsg:uns32; hWin:dword ); @external;
	setFont	:procedure( var inf	:EditInfo ); @external;
	setTabs	:procedure (var inf:EditInfo); @external;
	command_select_to_eol :procedure; @external;
	command_move_line_up :procedure; @external;
	command_move_line_down :procedure; @external; 
	command_uppercase_selection :procedure; @external;
	command_lowercase_selection	:procedure; @external;
	clear_keystate	:procedure; @external;


	
	
		
	
	
	
	