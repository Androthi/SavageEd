
	
	#includeonce("w.hhf")
	#includeonce("hide\hidelib.hhf")
	#includeonce("stdlib.hhf")
	#includeonce("hide\dbgwin.hhf")
	#includeonce( "w32\shell32.hhf" )
	#includeonce("hide\aeslib.hhf" )

	?@nodisplay :=true;
	?@nostackalign := true;


const
	#include( "res\rsrc.hhf" )
	RECENT_MENU_START	:= 9000;
	RECENT_MENU_END		:= 9019;	// 10 items in recent menu
	IDC_SBAR			:= 9020;
	statusht_c			:= 21;		// height of status bar

	STATUS_PARTS		:= 3;
	POS_LINES			:=170;
	POS_INS				:=POS_LINES+35;
	POS_READONLY		:=POS_INS+18;
	
	
type
	// Message and dispatch table related definitions:
		  
	MsgProc_t:	procedure( hwnd:dword; wParam:dword; lParam:dword );
	
	MsgProcPtr_t:
		record
			MessageValue	:dword;
			MessageHndlr	:MsgProc_t;			
		endrecord;

	wnd_settings:
		record
			xPos	:uns32;	// window x position
			yPos	:uns32; // window y position
			width	:uns32; // window width
			height	:uns32; // window height
			state	:dword; // is window stateimized?
							// 0 = normal, 1 = stateimized, 2 = minimized
			
		endrecord;

	PrnPos_t:
		record
			margins		:w.RECT;
			pagesize	:w.POINT;
		endrecord;

	colorMode:
		record
			textColor	:w.COLORREF;
			backColor	:w.COLORREF;
		endrecord;
		
	findMode:
		record
			down		:boolean;
			wholeword	:boolean;
			matchcase	:boolean;
			matchpattern:boolean;
		endrecord;

	menu_items :enum {
		IDM_NEW,
		IDM_OPEN,
		IDM_INST,
		IDM_SAVE,
		IDM_SAVEAS,
		IDM_RECENT,  
		IDM_PAGESETUP,
		IDM_PRINT,
		IDM_QUIT,
		IDM_UNDO,
		IDM_REDO,
		IDM_CUT, 
		IDM_COPY,
		IDM_PASTE,    
		IDM_SELECTALL, 
		IDM_FIND,
		IDM_FINDNEXT, 
		IDM_FINDPREV,
		IDM_REPLACE,
		IDM_EDIT_GOTO,
		IDM_TIME,
		IDM_FONT,
		IDM_BACKGROUND, 
		IDM_AUTO,
		IDM_WRAP,
		IDM_PEG,       
		IDM_READONLY,
		IDM_SETTAB,
		IDM_AUTOTAB,
		IDM_RECENTNEW,
		IDM_CLEAREXIT,
		IDM_OPENRECENT,
		IDM_REMEMBERPOS,
		IDM_OPTIONS_ENCRYPTAES,
		IDM_OPTIONS_DECRYPTAES,
		IDM_VIEW_STATUS,
		IDM_ABOUT,
		IDM_DOCUMENTS
	};

const
	

	color_white :w.COLORREF := $00FF_FFFF;
	color_black :w.COLORREF := $0000_0000;
	
	szLINEBUFFER	:= 3000;

static
	logfont			:w.LOGFONT;		@external;
	hred			:dword;			@external;
	hinst			:dword;			@external;
	hwnd			:dword;			@external;
	psd				:w.PAGESETUPDLG;	@external;
	ppos			:PrnPos_t;		@external;
	pd				:w.PRINTDLG;	@external;
	prnInches		:boolean;		@external;
	AppName			:string;		@external;

proc
	loadFile :procedure( filename:string ); @external;
	PrintDoc :procedure;		@external;
	GetPrnCaps:procedure;	@external;
	updateRecentLog :procedure; @external;
	updateMenu :procedure; @external;	
